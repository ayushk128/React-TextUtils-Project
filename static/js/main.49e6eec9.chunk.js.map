{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","toggleMode","htmlFor","TextForm","useState","text","setText","style","color","heading","value","onChange","event","target","backgroundColor","rows","newText","toUpperCase","showAlert","toLowerCase","split","length","Alert","alert","role","word","lower","charAt","slice","capitilize","msg","defaultProps","aboutText","App","setMode","setAlert","message","setTimeout","document","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.49e6eec9.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n            <div className=\"container-fluid\">\r\n                <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                        <li className=\"nav-item\">\r\n                            {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link> */}\r\n                            <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n                        </li>\r\n                        {/* <li className=\"nav-item\">\r\n                            <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link>\r\n                        </li> */}\r\n                    </ul>\r\n                    {/* <form className=\"d-flex\">\r\n                        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n                        <button className=\"btn btn-primary\" type=\"submit\">Search</button>\r\n                    </form> */}\r\n                    <div className={`form-check form-switch text-${props.mode === 'light'?'dark' : 'light'}`}>\r\n                        <input className=\"form-check-input\" onClick = {props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\" />\r\n                        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nNavbar.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    aboutText: PropTypes.string.isRequired\r\n}\r\nNavbar.defaultProps = {\r\n    title: 'Set title here',\r\n    aboutText: 'About'\r\n}","import React, {useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick = () => {\r\n        // console.log(\"Uppercase was clicked \" + text)\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converded to Uppercase!\", 'success')\r\n    }\r\n    const handleLoClick = () => {\r\n        // console.log(\"Uppercase was clicked \" + text)\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converded to Lowercase!\", 'success')\r\n\r\n    }\r\n    const handleClearClick = () => {\r\n        // console.log(\"Uppercase was clicked \" + text)\r\n        let newText = '';\r\n        setText(newText);\r\n    }\r\n    const handleOnChange = (event) => {\r\n        // console.log(\"On Change\")\r\n        setText(event.target.value)\r\n    }\r\n    const[text, setText] = useState('')\r\n    return (\r\n        <>\r\n            <div className = 'container' style = {{color: props.mode === 'dark'? 'white' : 'black'}}>\r\n                <h1>{props.heading}</h1>\r\n                <div className=\"mb-3\">\r\n                    <textarea className=\"form-control\" value = {text} onChange = {handleOnChange} style = {{backgroundColor: props.mode === 'dark'? 'grey' : 'white', color: props.mode === 'dark'? 'white' : 'black' }} id=\"myBox\" rows=\"8\"></textarea>\r\n                </div>\r\n                <div className=\"btn btn-primary mx-1\" onClick = {handleUpClick}>Convert to UpperCase</div>\r\n                <div className=\"btn btn-primary mx-1\" onClick = {handleLoClick}>Convert to LowerCase</div>\r\n                <div className=\"btn btn-primary mx-1\" onClick = {handleClearClick}>Clear</div>\r\n            </div>\r\n            <div className=\"container my-3\" style = {{color: props.mode === 'dark'? 'white' : 'black'}}>\r\n                <h2>Your text summary</h2>\r\n                <p>{text.split(\" \").length} Words and {text.length} Characters</p>\r\n                <p>{0.008 * text.split(\" \").length} Minutes to read</p>\r\n                <h2>Preview</h2>\r\n                <p>{text.length > 0 ? text : \"Enter something above to preview here\"}</p>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const capitilize = (word) => {\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n    return (\r\n        props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{capitilize(props.alert.type)}</strong>: {props.alert.msg}\r\n        </div>\r\n    )\r\n}\r\n","// import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport About from \"./components/About\";\nimport React, { useState } from 'react'\nimport Alert from \"./components/Alert\";\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n//   Link\n// } from \"react-router-dom\";\n\n\nfunction App() {\n  const [mode, setMode] = useState('light')\n  const [alert, setAlert] = useState(null)\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    }),\n      setTimeout(() => {\n        setAlert(null)\n      }, 1500)\n  }\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark')\n      document.body.style.backgroundColor = 'grey'\n      showAlert('Dark mode is enabled', 'success')\n    }\n    else {\n      setMode('light')\n      document.body.style.backgroundColor = 'white'\n      showAlert('Light mode is enabled', 'success')\n\n    }\n  }\n  return (\n    <>\n      {/* <Router> */}\n        <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} />\n        <Alert alert={alert} />\n        <div className=\"container my-3\">\n          {/* <Switch> */}\n            {/* <Route exact path=\"/about\">\n              <About />\n            </Route> */}\n            {/* <Route exact path=\"/\"> */}\n              <TextForm showAlert={showAlert} heading=\"Enter the text to analyze below\" mode={mode} />\n            {/* </Route> */}\n          {/* </Switch> */}\n        </div>\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}